# Cursor Rules for leaguedex

## Project Overview

This is an electron app that uses React & Typescript and its purpose is to help players become better by utilizing local and remote APIs from RIOT GAMES.

## Code Style & Patterns

- Never add comments
- We always want to try and add access modifiers in classes. So a method will be prefixed with public,protected,private etc.
- We always try to add the return type to a method. This creates a strict contract and helps us understand boundaries.


## Architecting Features

- We work closely with Uncle bob, Martin Fowler and alistair cockburn. We love the ideas of Ports & Adapters, Clean Architecture
  but we are also very pragmatic. This is afterall a hobby project, but we do value a good development environment and the option to test
  hard to test features. This does not mean that we will always do this but we will definitely think about it! When we start working on a completely
  new feature that doesn't fall under the current domain then we might just put it in the root until it makes sense for us where it should live.

- For frontend related things (React) we should recognise common patterns and move these out. So for example if we have to add the same classes for a button
  everytime then we will check if we have a button component, if not, we create one and start building our own design system. So we can use our own button component
  with default styles and variant option for example. But if something looks like its only used once or twice, we don't really bother. BUT, we should always
  be aware.

- We as engineers really value boundaries over anything. As long as the app shows us the domains we are working on then we are good. How we architect the inside
  isn't something we are too concered about. Again, we are pragmatic but we understand and know all the patterns!